{"version":3,"file":"static/js/521.4d0d7748.chunk.js","mappings":"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","sources":["hooks/useVerifyLogin.ts","views/Discover/c-views/ranking/style.ts","views/Discover/c-views/ranking/c-cpns/ranking-header/style.ts","components/song-operator-bar/style.ts","components/song-operator-bar/index.tsx","views/Discover/c-views/ranking/c-cpns/ranking-header/index.tsx","views/Discover/c-views/ranking/c-cpns/ranking-list/style.ts","components/theme-header-song/style.ts","components/theme-header-song/index.tsx","views/app-comment/style.ts","views/app-comment/c-cpns/comnment-header/style.ts","views/app-comment/c-cpns/comnment-header/index.tsx","views/app-comment/c-cpns/comment-content/style.ts","views/app-comment/c-cpns/del-comment-tip/style.ts","views/app-comment/c-cpns/del-comment-tip/index.tsx","views/app-comment/c-cpns/comment-content/index.tsx","views/app-comment/index.tsx","views/Discover/c-views/ranking/c-cpns/collect/style.ts","views/Discover/c-views/ranking/c-cpns/new-playlist/style.ts","views/Discover/c-views/ranking/c-cpns/new-playlist/index.tsx","views/Discover/c-views/ranking/c-cpns/collect/index.tsx","views/Discover/c-views/ranking/c-cpns/ranking-list/index.tsx","views/Discover/c-views/ranking/c-cpns/top-ranking/style.ts","views/Discover/c-views/ranking/c-cpns/top-ranking/index.tsx","views/Discover/c-views/ranking/index.tsx"],"sourcesContent":["import { useAppDispatch } from '@/store'\nimport {\n  changeShowPanelAction,\n  fetchCodeDataAction,\n  fetchCodeStatusAction\n} from '../views/login/store'\n\nexport default function useVerifyLogin() {\n  const dispatch = useAppDispatch()\n\n  const verify = () => {\n    console.log(localStorage.getItem('cookie'))\n\n    if (\n      !localStorage.getItem('cookie') ||\n      localStorage.getItem('cookie') === ''\n    ) {\n      dispatch(fetchCodeDataAction())\n      dispatch(changeShowPanelAction(true))\n      console.log('打印了')\n\n      return false\n    } else {\n      return true\n    }\n  }\n  return { verify }\n}\n","import styled from 'styled-components'\n\nexport const RankingWrapper = styled.div`\n  display: flex;\n`\n\nexport const RankingLeft = styled.div`\n  width: 240px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n`\n\nexport const RankingRight = styled.div`\n  width: 740px;\n  border-right: 1px solid #d3d3d3;\n  background-color: #fafafa;\n`\n","import styled from 'styled-components'\n\nexport const RankingHeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 40px;\n\n  .image {\n    padding: 3px;\n    border: 1px solid #ccc;\n    position: relative;\n    img {\n      width: 150px;\n      height: 150px;\n    }\n\n    .image_cover {\n      background-position: -230px -380px;\n    }\n  }\n\n  .info {\n    margin-left: 30px;\n    .title {\n      color: #333;\n      font-size: 20px;\n      font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n    }\n\n    .time {\n      display: flex;\n      align-items: center;\n      color: #666;\n      margin: 8px 0 30px;\n\n      .clock {\n        display: inline-block;\n        width: 13px;\n        height: 13px;\n        background-position: -18px -682px;\n        position: relative;\n        top: -2px;\n        margin-right: 3px;\n      }\n\n      .update-f {\n        color: #999;\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const OperatorBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .play {\n    display: flex;\n    align-items: center;\n    margin-right: 5px;\n\n    .play-icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      background-position: right -428px;\n\n      .play {\n        color: #fff;\n        display: flex;\n        align-items: center;\n        padding: 0 7px 0 8px;\n        background-position: 0 -387px;\n\n        i {\n          display: inline-block;\n          width: 20px;\n          height: 18px;\n          margin: -2px 2px 0;\n          background-position: 0 -1622px;\n        }\n      }\n    }\n\n    .add-icon {\n      display: inline-block;\n      width: 31px;\n      height: 31px;\n      margin-left: -3px;\n      padding-right: 0;\n      background-position: 0 -1588px;\n      text-indent: -9999px;\n    }\n  }\n\n  .item {\n    display: inline-block;\n    height: 31px;\n    margin-right: 4px;\n    padding-right: 5px;\n    background-position: right -1020px;\n\n    .icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      padding: 0 7px 0 28px;\n      font-family: simsun;\n    }\n\n    .favor-icon {\n      background-position: 0 -977px;\n    }\n\n    .share-icon {\n      background-position: 0 -1225px;\n    }\n\n    .download-icon {\n      background-position: 0 -2761px;\n    }\n\n    .comment-icon {\n      background-position: 0 -1465px;\n    }\n  }\n`\n","import React, { memo, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { OperatorBarWrapper } from './style'\ninterface IProps {\n  children?: ReactNode\n  favorTitle: number\n  shareTitle: number\n  downloadTitle: string\n  commentTitle: number\n}\n\nconst SongOperatorBar: React.FC<IProps> = (props) => {\n  const { favorTitle, shareTitle, downloadTitle, commentTitle } = props\n\n  return (\n    <OperatorBarWrapper>\n      <span className=\"play\">\n        <div className=\"play-icon sprite_button\">\n          <span className=\"play sprite_button\">\n            <i className=\"sprite_button\"></i>\n            <span>播放</span>\n          </span>\n        </div>\n        <div className=\"add-icon sprite_button\">+</div>\n      </span>\n      <div className=\"item sprite_button\">\n        <i className=\"icon favor-icon sprite_button\">{favorTitle}</i>\n      </div>\n      <div className=\"item sprite_button\">\n        <i className=\"icon share-icon sprite_button\">{shareTitle}</i>\n      </div>\n      <div className=\"item sprite_button\">\n        <i className=\"icon download-icon sprite_button\">{downloadTitle}</i>\n      </div>\n      <div className=\"item sprite_button\">\n        <i className=\"icon comment-icon sprite_button\">{commentTitle}</i>\n      </div>\n    </OperatorBarWrapper>\n  )\n}\n\nexport default memo(SongOperatorBar)\n","import React, { memo } from 'react'\nimport type { ReactNode } from 'react'\nimport { RankingHeaderWrapper } from './style'\nimport { useAppSelector } from '@/store'\nimport { formatMonthDay } from '@/utils/format'\nimport SongOperatorBar from '@/components/song-operator-bar'\nimport { shallowEqual } from 'react-redux'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst RankingHeader: React.FC<IProps> = () => {\n  const { playlist } = useAppSelector(\n    (state) => ({\n      playlist: state.ranking.playlist\n    }),\n    shallowEqual\n  )\n  return (\n    <RankingHeaderWrapper>\n      <div className=\"image\">\n        <img src={playlist?.coverImgUrl} alt=\"\" />\n        {/* <span className=\"image_cover\">封面</span> */}\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">{playlist?.name}</div>\n        <div className=\"time\">\n          <i className=\"clock sprite_icon2\"></i>\n          <div>最近更新：{formatMonthDay(playlist?.updateTime)}</div>\n          <div className=\"update-f\">（{'每日更新:TODO'}）</div>\n        </div>\n        <SongOperatorBar\n          favorTitle={playlist?.subscribedCount}\n          shareTitle={playlist?.shareCount}\n          downloadTitle=\"下载\"\n          commentTitle={playlist?.commenCount}\n        />\n      </div>\n    </RankingHeaderWrapper>\n  )\n}\n\nexport default memo(RankingHeader)\n","import styled from 'styled-components'\n\nexport const RankingListWrapper = styled.div`\n  padding: 0 40px;\n\n  .play-list {\n    position: relative;\n    table {\n      width: 100%;\n      border: 1px solid #d9d9d9;\n\n      thead {\n        th {\n          height: 34px;\n          line-height: 34px;\n          background-image: url(${require('@/assets/img/sprite_table.png')});\n          color: #666;\n          border: 1px solid #ddd;\n          border-width: 0 0 1px 1px;\n          padding-left: 10px;\n        }\n\n        .ranking {\n          width: 78px;\n          border-left: none;\n        }\n\n        .duration {\n          width: 91px;\n        }\n\n        .singer {\n          width: 173px;\n        }\n      }\n\n      tbody {\n        .icons {\n          .btn {\n            &:hover {\n              cursor: pointer;\n            }\n          }\n          .play {\n            display: inline-block;\n            width: 13px;\n            height: 13px;\n            background-position: 0 -700px;\n          }\n          .collect {\n            display: inline-block;\n            width: 18px;\n            height: 16px;\n            background-position: 0 -174px;\n            position: relative;\n            top: 3px;\n            left: 3px;\n          }\n          .share {\n            display: inline-block;\n            width: 18px;\n            height: 16px;\n            background-position: 0 -195px;\n            position: relative;\n            top: 3px;\n            left: 4px;\n          }\n          .download {\n            display: inline-block;\n            width: 18px;\n            height: 16px;\n            background-position: -81px -174px;\n            position: relative;\n            top: 3px;\n            left: 4px;\n          }\n        }\n        .row {\n          position: relative;\n        }\n        td {\n          padding: 8px 10px;\n          height: 40px !important;\n          box-sizing: border-box;\n        }\n\n        tr:nth-child(2n) {\n          background-color: #fff;\n        }\n\n        tr:nth-child(2n + 1) {\n          background-color: #f7f7f7;\n        }\n\n        .rank-num {\n          display: flex;\n\n          .num {\n            width: 25px;\n            height: 18px;\n            text-align: center;\n            color: #999;\n          }\n\n          .new {\n            width: 16px;\n            height: 17px;\n            margin-left: 12px;\n            background-position: -67px -283px;\n          }\n        }\n\n        .song-name {\n          display: flex;\n          align-items: center;\n          img {\n            width: 50px;\n            height: 50px;\n            margin-right: 10px;\n          }\n\n          .play {\n            width: 17px;\n            height: 17px;\n            background-position: 0 -103px;\n          }\n\n          .name {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const ThemeHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n  border-bottom: 2px solid #c20c0c;\n\n  .left {\n    display: flex;\n    align-items: flex-end;\n\n    .title {\n      font-size: 20px;\n      font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n    }\n\n    .count {\n      margin-bottom: 5px;\n      margin-left: 20px;\n    }\n  }\n\n  .right {\n    .count {\n      color: #c20c0c;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { ReactNode } from 'react'\nimport { ThemeHeaderWrapper } from './style'\nimport { useAppSelector } from '@/store'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst ThemeHeaderSong: React.FC<IProps> = () => {\n  const { playlist } = useAppSelector((state) => ({\n    playlist: state.ranking.playlist\n  }))\n  return (\n    <ThemeHeaderWrapper>\n      <div className=\"left\">\n        <h3 className=\"title\">歌曲列表</h3>\n        <div className=\"count\">{playlist?.trackCount}首歌</div>\n      </div>\n      <div className=\"right\">\n        <span>播放：</span>\n        <span className=\"count\">{playlist?.playCount}</span>\n        <span>次</span>\n      </div>\n    </ThemeHeaderWrapper>\n  )\n}\n\nexport default memo(ThemeHeaderSong)\n","import styled from 'styled-components'\n\nexport const CommentWrapper = styled.div`\n  margin-top: 40px;\n\n  .content {\n    margin-bottom: 20px;\n    .comment-site {\n      display: flex;\n      justify-content: space-between;\n      .avatar {\n        width: 50px;\n        height: 50px;\n        img {\n          width: 100%;\n          height: 100%;\n        }\n      }\n      .comment-place {\n        .textarea {\n          width: 600px;\n        }\n        .btns {\n          display: flex;\n          justify-content: space-between;\n          margin-top: 10px;\n          .function {\n            .emotion {\n              display: inline-block;\n              width: 18px;\n              height: 18px;\n              background-position: -40px -490px;\n              margin-right: 10px;\n            }\n            .call {\n              display: inline-block;\n              width: 18px;\n              height: 18px;\n              background-position: -60px -490px;\n            }\n          }\n          .delay {\n            span {\n              margin-right: 8px;\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const CommentHeaderWrapper = styled.div`\n  .cnt {\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    border-bottom: 2px solid #c20c0c;\n    margin-bottom: 15px;\n    .title {\n      font-size: 20px;\n      margin-right: 20px;\n    }\n    .comment-num {\n      position: relative;\n      top: 4px;\n      color: #987c79;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { ReactNode } from 'react'\nimport { CommentHeaderWrapper } from './style'\ninterface IProps {\n  children?: ReactNode\n  totalComment: number\n}\n\nconst CommentHeader: React.FC<IProps> = (props) => {\n  return (\n    <CommentHeaderWrapper>\n      <div className=\"cnt\">\n        <h3 className=\"title\">评论</h3>\n        <div className=\"comment-num\">共{props.totalComment}条评论</div>\n      </div>\n    </CommentHeaderWrapper>\n  )\n}\n\nexport default memo(CommentHeader)\n","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div`\n  .header {\n    font-weight: 600;\n    padding: 4px;\n    border-bottom: 2px solid #dadada;\n    font-size: 12px;\n    margin-bottom: 20px;\n  }\n\n  .ctx {\n    .item {\n      display: flex;\n      /* justify-content: space-between; */\n      border-bottom: 1px solid #ccc;\n      padding: 20px;\n      background-color: #fff;\n      .avatar {\n        width: 50px;\n        height: 50px;\n        margin-right: 15px;\n        img {\n          width: 100%;\n          height: 100%;\n        }\n      }\n      .info {\n        .top {\n          width: 560px;\n          margin-bottom: 15px;\n        }\n        .beReply {\n          width: 560px;\n          padding: 10px 20px;\n          background-color: #f4f4f4;\n          border: 1px solid #ccc;\n        }\n        .bottom {\n          display: flex;\n          justify-content: space-between;\n          margin-top: 15px;\n          .divider {\n            margin: 0 7px;\n          }\n          .del {\n            cursor: pointer;\n            display: none;\n            &:hover {\n              text-decoration: underline;\n            }\n          }\n          .del-active {\n            display: block;\n          }\n          .right {\n            display: flex;\n\n            .like {\n              display: inline-block;\n              width: 15px;\n              height: 14px;\n              background-position: -150px 0;\n              position: relative;\n              top: -2px;\n            }\n            .like-active {\n              background-position: -170px 0;\n            }\n            .replay {\n              cursor: pointer;\n              &:hover {\n                text-decoration: underline;\n              }\n            }\n          }\n        }\n        .replay-ctn {\n          border: 1px solid #eee;\n          padding: 15px;\n          background-color: #f4f4f4;\n          margin-top: 20px;\n          .replay-text {\n            .replay-input {\n              width: 100%;\n              height: 30px;\n              border: 1px solid #ccc;\n              padding: 5px;\n              background-color: #fff;\n            }\n          }\n          .btns {\n            display: flex;\n            justify-content: space-between;\n            margin-top: 10px;\n            .function {\n              .emotion {\n                display: inline-block;\n                width: 18px;\n                height: 18px;\n                background-position: -40px -490px;\n                margin-right: 10px;\n              }\n              .call {\n                display: inline-block;\n                width: 18px;\n                height: 18px;\n                background-position: -60px -490px;\n              }\n            }\n            .delay {\n              span {\n                margin-right: 8px;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  .blue {\n    color: #2676c4;\n  }\n\n  .pagination {\n    padding: 80px 0 150px 0;\n    display: flex;\n    justify-content: center;\n\n    .ant-pagination .ant-pagination-item-active {\n      background-color: #c40a0f;\n      color: #fff;\n      border-radius: 0;\n    }\n    .ant-pagination .ant-pagination-item-active a {\n      color: #fff;\n    }\n    .ant-pagination-item {\n      border: 1px solid #666;\n      border-radius: 0;\n    }\n    .ant-pagination-options {\n      display: none;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const TipWrapper = styled.div`\n  position: fixed;\n  z-index: 99;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  .content {\n    background-color: #fff;\n    padding: 40px 0;\n    text-align: center;\n    .tip {\n      color: #222;\n      font-size: 14px;\n    }\n    .operator {\n      padding: 40px;\n      .sure {\n        margin-right: 20px;\n        background-color: #2e7ecb;\n        color: #fff;\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { ReactNode } from 'react'\nimport { TipWrapper } from './style'\nimport DialogHeader from '@/components/dialog-header'\nimport { Button, message } from 'antd'\nimport { operateComment } from '../../service/comment'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { changeCloseTipAction, fetchCommentAction } from '../../store/comment'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst CommentTip: React.FC<IProps> = () => {\n  const dispatch = useAppDispatch()\n\n  const { sourceId, commentId } = useAppSelector((state) => ({\n    sourceId: state.comment.sourceId,\n    commentId: state.comment.commentId\n  }))\n\n  async function handleSureClick() {\n    const res = await operateComment(0, 2, sourceId, undefined, commentId)\n    console.log(res)\n    if (res.code === 200) {\n      message.open({ content: '删除评论成功', duration: 1 })\n    } else {\n      message.open({ content: '删除评论失败', duration: 1 })\n    }\n    dispatch(changeCloseTipAction(true))\n    setTimeout(() => {\n      dispatch(fetchCommentAction(0))\n    }, 500)\n  }\n  return (\n    <TipWrapper>\n      <DialogHeader title=\"提升\"></DialogHeader>\n      <div className=\"content\">\n        <div className=\"tip\">确定删除评论?</div>\n        <div className=\"operator\">\n          <Button className=\"sure\" onClick={handleSureClick}>\n            确定\n          </Button>\n          <Button onClick={(e) => dispatch(changeCloseTipAction(true))}>\n            取消\n          </Button>\n        </div>\n      </div>\n    </TipWrapper>\n  )\n}\n\nexport default memo(CommentTip)\n","import React, { memo, useState, useRef, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { ContentWrapper } from './style'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { Pagination } from 'antd'\nimport { shallowEqual } from 'react-redux'\nimport {\n  changeCloseTipAction,\n  changeCommentIdAction,\n  changeCommentsAction,\n  changeTotalAction,\n  fetchCommentAction\n} from '../../store/comment'\nimport classNames from 'classnames'\nimport DelCommentTip from '../del-comment-tip'\nimport { Button, message } from 'antd'\nimport { operateComment } from '../../service/comment'\nimport useVerifyLogin from '@/hooks/useVerifyLogin'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst CommentContent: React.FC<IProps> = () => {\n  const dispatch = useAppDispatch()\n\n  const replyRef = useRef<HTMLInputElement>(null)\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [showDelIndex, setShowDelIndex] = useState(-1)\n  const [showReplyIndex, setShowReplyIndex] = useState(-1)\n  const [showReply, setShowReply] = useState(false)\n  const [replyText, setReplyText] = useState('')\n  // const [likeActiveIndex, setLikeActiveIndex] = useState(-1)\n\n  const { verify } = useVerifyLogin()\n\n  const {\n    comments,\n    total = 1,\n    uid,\n    sourceId,\n    closeDelTip\n  } = useAppSelector(\n    (state) => ({\n      comments: state.comment.comments,\n      total: state.comment.total,\n      uid: state.user.uid,\n      sourceId: state.comment.sourceId,\n      closeDelTip: state.comment.closeDelTip\n    }),\n    shallowEqual\n  )\n\n  // useEffect(() => {\n  //   // setTimeout(() => {\n  //   //   dispatch(fetchCommentAction(0))\n  //   // }, 1000)\n  //   console.log(total)\n  // }, [total])\n\n  function handleCurrentPageChange(page: number) {\n    setCurrentPage(page)\n    const offset = (page - 1) * 20\n    dispatch(fetchCommentAction(offset))\n  }\n\n  async function handleDelClick(commentId: number) {\n    dispatch(changeCloseTipAction(false))\n\n    dispatch(changeCommentIdAction(commentId))\n  }\n\n  //回复点击\n  function handleReplyClick(index: number) {\n    if (!verify()) {\n      return\n    }\n    setTimeout(() => {\n      replyRef.current?.focus()\n    }, 0)\n    if (index !== showReplyIndex) {\n      setShowReplyIndex(index)\n      setShowReply(true)\n    } else {\n      setShowReply(!showReply)\n      if (index === showReplyIndex) return\n      setShowReplyIndex(index)\n    }\n  }\n\n  function handleReplyChange(e: any) {\n    const content = e.target.value.replace(e.target.defaultValue, '')\n\n    setReplyText(content)\n  }\n\n  async function handleCommentClick(commentId: number) {\n    //调用回复评论接口\n    const res = await operateComment(2, 2, sourceId, replyText, commentId)\n    // console.log(res)\n    //获取最新评论\n    setTimeout(() => {\n      dispatch(fetchCommentAction(0))\n    }, 500)\n\n    //关闭回复\n    setShowReply(false)\n    if (res.code === 200) {\n      message.open({\n        content: `评论成功`,\n        duration: 2\n      })\n    } else {\n      message.open({\n        content: `评论失败`,\n        duration: 2\n      })\n    }\n  }\n\n  //点赞点击\n  function handleLikeClick(index: number) {\n    console.log(111)\n  }\n\n  return (\n    <ContentWrapper>\n      <div className=\"header\">最新评论（{total}）</div>\n      <div className=\"ctx\">\n        {comments?.map((item, index) => {\n          const likedCount = item.likedCount\n          let num\n          if (likedCount !== 0) {\n            // console.log(likedCount)\n\n            num = <span>（{item.likedCount}）</span>\n          } else {\n            num = ''\n          }\n          return (\n            <div\n              className=\"item\"\n              key={item.time}\n              onMouseEnter={(e) => setShowDelIndex(index)}\n              onMouseLeave={(e) => setShowDelIndex(-1)}\n            >\n              <div className=\"avatar\">\n                <img src={item.user.avatarUrl} alt=\"\" />\n              </div>\n              <div className=\"info\">\n                <div className=\"top\">\n                  <span className=\"blue\">{item.user.nickname}</span> :\n                  {item.content}\n                </div>\n                {item.beReplied.length !== 0 && (\n                  <div className=\"beReply\">\n                    {item.beReplied[0].content ? (\n                      <div>\n                        <span className=\"blue\">\n                          {item.beReplied[0].user.nickname}\n                        </span>\n                        : {item.beReplied[0].content}\n                      </div>\n                    ) : (\n                      '该评论已删除'\n                    )}\n                  </div>\n                )}\n                <div className=\"bottom\">\n                  <div className=\"left\">{item.timeStr}</div>\n                  <div className=\"right\">\n                    {showDelIndex === index && (\n                      <div\n                        className={classNames('del', {\n                          'del-active': uid === item.user.userId\n                        })}\n                      >\n                        <span onClick={(e) => handleDelClick(item.commentId)}>\n                          删除\n                        </span>\n                        <span className=\"divider\">|</span>\n                      </div>\n                    )}\n                    <i\n                      className={classNames('sprite_icon3 like')}\n                      onClick={(e) => handleLikeClick(index)}\n                    ></i>\n                    {num}\n                    <span className=\"divider\">|</span>\n                    <div\n                      className=\"replay\"\n                      onClick={(e) => handleReplyClick(index)}\n                    >\n                      回复\n                    </div>\n                  </div>\n                </div>\n                {showReply && showReplyIndex === index && (\n                  <div className=\"replay-ctn\">\n                    <div className=\"replay-text\">\n                      <input\n                        defaultValue={`回复${item.user.nickname}:`}\n                        className=\"replay-input\"\n                        ref={replyRef}\n                        onChange={(e) => handleReplyChange(e)}\n                      ></input>\n                    </div>\n                    <div className=\"btns\">\n                      <div className=\"function\">\n                        <i className=\"sprite_icon2 emotion\"></i>\n                        <i className=\"sprite_icon2 call\"></i>\n                      </div>\n                      <div className=\"delay\">\n                        <span>140</span>\n                        <Button\n                          type=\"primary\"\n                          size=\"small\"\n                          onClick={(e) => handleCommentClick(item.commentId)}\n                        >\n                          回复\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {!closeDelTip && <DelCommentTip></DelCommentTip>}\n      {total !== -1 && (\n        <div className=\"pagination\">\n          <Pagination\n            current={currentPage}\n            onChange={(e) => handleCurrentPageChange(e)}\n            total={total}\n            pageSize={20}\n          />\n        </div>\n      )}\n    </ContentWrapper>\n  )\n}\n\nexport default memo(CommentContent)\n","import React, { memo, useState } from 'react'\nimport type { ReactNode } from 'react'\nimport { CommentWrapper } from './style'\nimport ComnmentHeader from './c-cpns/comnment-header'\nimport { useAppDispatch, useAppSelector } from '@/store'\n// import TextArea from 'antd/es/input/TextArea'\nimport { Button, Input } from 'antd'\nimport CommentContent from './c-cpns/comment-content'\nimport { message } from 'antd'\nimport { operateComment } from './service/comment'\nimport { fetchCommentAction } from './store/comment'\nimport useVerifyLogin from '@/hooks/useVerifyLogin'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst { TextArea } = Input\n\nconst Comment: React.FC<IProps> = () => {\n  const [content, setContent] = useState('')\n  const dispatch = useAppDispatch()\n\n  const { verify } = useVerifyLogin()\n\n  const {\n    avatarUrl = '',\n    sourceId,\n    total\n  } = useAppSelector((state) => ({\n    avatarUrl: state.user.avatarUrl,\n    sourceId: state.comment.sourceId,\n    total: state.comment.total\n  }))\n\n  async function handleCommentClick() {\n    const res = await operateComment(1, 2, sourceId, content)\n    if (res.code === 200) {\n      setTimeout(() => {\n        dispatch(fetchCommentAction(0))\n      }, 500)\n      message.open({\n        content: '评论成功',\n        duration: 1\n      })\n    } else {\n      message.open({\n        content: '评论失败',\n        duration: 1\n      })\n    }\n\n    setContent('')\n  }\n\n  function handleFocus() {\n    console.log('评论了')\n\n    verify()\n  }\n\n  return (\n    <CommentWrapper>\n      <ComnmentHeader totalComment={total}></ComnmentHeader>\n      <div className=\"content\">\n        <div className=\"comment-site\">\n          <div className=\"avatar\">\n            <img src={avatarUrl} alt=\"\" />\n          </div>\n          <div className=\"comment-place\">\n            <TextArea\n              value={content}\n              onFocus={(e) => handleFocus()}\n              onChange={(e) => setContent(e.target.value)}\n              rows={3}\n              placeholder=\"评论\"\n              className=\"textarea\"\n              maxLength={140}\n            ></TextArea>\n            <div className=\"btns\">\n              <div className=\"function\">\n                <i className=\"sprite_icon2 emotion\"></i>\n                <i className=\"sprite_icon2 call\"></i>\n              </div>\n              <div className=\"delay\">\n                <span>140</span>\n                <Button\n                  type=\"primary\"\n                  size=\"small\"\n                  onClick={handleCommentClick}\n                >\n                  评论\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CommentContent></CommentContent>\n    </CommentWrapper>\n  )\n}\n\nexport default memo(Comment)\n","import styled from 'styled-components'\n\nexport const CollectWrapper = styled.div`\n  position: fixed;\n  z-index: 999;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  .content {\n    /* overflow: hidden; */\n    height: 374px;\n    background-color: #fff;\n\n    .add-songlist {\n      padding: 10px 0 10px 35px;\n      background: #e6e6e6;\n      cursor: pointer;\n      font-size: 12px;\n      vertical-align: middle;\n      .add {\n        display: inline-block;\n        width: 35px;\n        height: 36px;\n        background-position: 0 -495px;\n      }\n      .text {\n        /* display: inline-block;\n        height: 35px;\n        line-height: 35px; */\n        font-size: 14px;\n        position: relative;\n        left: 10px;\n        top: -15px;\n      }\n    }\n\n    .song-list {\n      width: 100%;\n      height: 100%;\n      overflow: scroll;\n      .item {\n        display: flex;\n\n        padding: 10px 0 10px 35px;\n        background-color: #fff;\n        &:hover {\n          background-color: #f2f2f2;\n        }\n\n        .cover-img {\n          width: 40px;\n          height: 40px;\n          margin-right: 10px;\n        }\n\n        .info {\n          display: flex;\n          flex-direction: column;\n          justify-content: space-between;\n        }\n      }\n      .line {\n        border-bottom: 1px solid #e6e6e6;\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const NewPlaylistWrapper = styled.div`\n  background-color: #fff;\n  .info {\n    width: 100%;\n    height: 209px;\n    margin-left: 30px;\n    padding: 40px 0;\n    display: flex;\n    /* align-items: center; */\n    flex-direction: column;\n    justify-content: space-between;\n    .playlist {\n      display: flex;\n      align-items: center;\n      .ant-input {\n        margin-left: 8px;\n        width: 344px;\n        height: 32px;\n        border: 1px solid #ccc;\n        border-radius: 0;\n      }\n    }\n    .tip {\n      margin-top: 10px;\n      color: #b7b5b3;\n      margin-left: 44px;\n    }\n    .btn {\n      margin-left: 44px;\n      .new {\n        background-color: #3080cc;\n        margin-right: 10px;\n      }\n    }\n  }\n`\n","import React, { memo, useState, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { NewPlaylistWrapper } from './style'\nimport DialogHeader from '@/components/dialog-header'\nimport { Input, Button } from 'antd'\nimport { newPlaylist } from '@/service/modules/main'\nimport { message } from 'antd'\nimport { useAppDispatch } from '@/store'\nimport {\n  addSongToPlaylistAction,\n  changeShowCollectDialog\n} from '@/store/modules/collect'\ninterface IProps {\n  children?: ReactNode\n  needCollectSongid: number\n}\n\nconst NewPlaylist: React.FC<IProps> = (props) => {\n  const { needCollectSongid } = props\n  const dispatch = useAppDispatch()\n\n  const [playlistName, setPlaylistName] = useState('')\n  // const [collectSongId, setCollectSongId] = useState(-1)\n\n  // useEffect(() => {\n  //   //监听发送过来的收藏歌曲id,行不通！！！\n  //   eventBus.on('getCollectSongId', handleCollectSong)\n  //   return () => {\n  //     eventBus.off('getCollectSongId', handleCollectSong)\n  //   }\n  // }, [])\n  // function handleCollectSong(id: number) {\n  //   console.log('id', id)\n  //   setCollectSongId(id)\n  // }\n\n  async function handleNewClick() {\n    const res = await newPlaylist(playlistName)\n    const pid = res.id\n    console.log(res)\n    //判断是否新建歌单成功\n    if (res.code === 200) {\n      console.log('新建成功')\n      //添加歌曲到歌单\n      dispatch(addSongToPlaylistAction({ pid: pid, tracks: needCollectSongid }))\n    } else {\n      message.open({\n        content: '新建歌单失败',\n        duration: 1\n      })\n      console.log('新建失败')\n    }\n    //关闭收藏弹框\n    dispatch(changeShowCollectDialog(false))\n  }\n  return (\n    <NewPlaylistWrapper>\n      <DialogHeader title=\"新建歌单\"></DialogHeader>\n      <div className=\"info\">\n        <div className=\"playlist\">\n          歌单名:\n          <Input\n            value={playlistName}\n            onChange={(e) => setPlaylistName(e.target.value)}\n          ></Input>\n        </div>\n        <p className=\"tip\">可以通过“收藏”将音乐添加到新歌单中</p>\n        <div className=\"btn\">\n          <Button type=\"primary\" className=\"new\" onClick={handleNewClick}>\n            新建\n          </Button>\n          <Button onClick={(e) => dispatch(changeShowCollectDialog(false))}>\n            取消\n          </Button>\n        </div>\n      </div>\n    </NewPlaylistWrapper>\n  )\n}\n\nexport default memo(NewPlaylist)\n","import React, { memo, useState, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { CollectWrapper } from './style'\nimport DialogHeader from '@/components/dialog-header'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport classNames from 'classnames'\nimport NewPlaylist from '../new-playlist'\nimport {\n  addSongToPlaylistAction,\n  changeShowCollectDialog\n} from '@/store/modules/collect'\ninterface IProps {\n  children?: ReactNode\n  needCollectSongid: number\n}\n\nconst Collect: React.FC<IProps> = (props) => {\n  const { needCollectSongid } = props\n  const dispatch = useAppDispatch()\n  const { userPlaylist } = useAppSelector((state) => ({\n    userPlaylist: state.user.userPlayList\n  }))\n  // const [collectSongid, setCollectSongid] = useState(-1)\n\n  // useEffect(() => {\n  //   setCollectSongid(needCollectSongid)\n  // }, [needCollectSongid])\n\n  const [showNewPlaylist, setShowNewPlaylist] = useState(false)\n\n  function handlePlaylistItemClick(pid: number) {\n    console.log(pid)\n\n    dispatch(\n      addSongToPlaylistAction({\n        pid: pid,\n        tracks: needCollectSongid\n      })\n    )\n    dispatch(changeShowCollectDialog(false))\n  }\n  return (\n    <CollectWrapper>\n      {!showNewPlaylist ? (\n        <div className=\"main\">\n          <DialogHeader title=\"添加到歌单\"></DialogHeader>\n          <div className=\"content\">\n            <div\n              className=\"add-songlist\"\n              onClick={(e) => setShowNewPlaylist(true)}\n            >\n              <i className=\"add sprite_icon2\"></i>\n              <span className=\"text\">新歌单</span>\n            </div>\n            <div className=\"song-list\">\n              {userPlaylist?.map((item, index) => {\n                return (\n                  <div\n                    className={classNames('item', {\n                      line: index !== userPlaylist.length - 1\n                    })}\n                    key={index}\n                    onClick={(e) => handlePlaylistItemClick(item.id)}\n                  >\n                    <img src={item.coverImgUrl} className=\"cover-img\" alt=\"\" />\n                    <div className=\"info\">\n                      <h3 className=\"title\">{item.name}</h3>\n                      <div className=\"num\">{item.trackCount}首</div>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <NewPlaylist needCollectSongid={needCollectSongid}></NewPlaylist>\n      )}\n    </CollectWrapper>\n  )\n}\n\nexport default memo(Collect)\n","import React, { memo, useState, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { RankingListWrapper } from './style'\nimport ThemeHeaderSong from '@/components/theme-header-song'\nimport { getImageSize } from '@/utils/format'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { formatMinuteSecond } from '@/utils/format'\nimport { fetchSongDetailAction } from '@/views/player/store'\nimport Comment from '@/views/app-comment'\nimport Collect from '../collect'\nimport { fetchUserPlaylistAction } from '@/store/modules/user'\nimport { changeShowPanelAction, fetchCodeDataAction } from '@/views/login/store'\nimport { shallowEqual } from 'react-redux'\nimport { changeShowCollectDialog } from '@/store/modules/collect'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst RankingList: React.FC<IProps> = () => {\n  const dispatch = useAppDispatch()\n\n  const [showIconIndex, setShowIconIndex] = useState(-1)\n  const [needCollectSongid, setNeedwCollectSongid] = useState(-1)\n\n  const { playlist, avatarUrl, showCollectDialog } = useAppSelector(\n    (state) => ({\n      playlist: state.ranking.playlist,\n      avatarUrl: state.user.avatarUrl,\n      showCollectDialog: state.collect.showCollectDialog\n    }),\n    shallowEqual\n  )\n\n  // useEffect(() => {\n  //使用事件总线\n  //   eventBus.on('closeDialogCollect', handleCloseCollect)\n\n  //   return () => {\n  //     eventBus.off('closeDialogCollect', handleCloseCollect)\n  //   }\n  // }, [])\n\n  // function handleCloseCollect(flag: boolean) {\n  //   // setShowDialog(flag)\n  // }\n\n  function handleCollectClick(id: number) {\n    //判断是否有进行登录，没有进行登录操作\n    if (!avatarUrl) {\n      //没有登录,弹出登陆框，\n      dispatch(changeShowPanelAction(true))\n      dispatch(fetchCodeDataAction())\n    } else {\n      //发起获取歌单请求\n      dispatch(fetchUserPlaylistAction())\n      //将收藏的歌曲id发送给新建歌曲组件\n      // eventBus.emit('getCollectSongId', id),行不通\n      setNeedwCollectSongid(id)\n\n      // 弹出收藏对话框\n      dispatch(changeShowCollectDialog(true))\n    }\n  }\n\n  return (\n    <RankingListWrapper>\n      <ThemeHeaderSong></ThemeHeaderSong>\n      <div className=\"play-list\">\n        <table>\n          <thead>\n            <tr className=\"header\">\n              <th className=\"ranking\"></th>\n              <th className=\"title\">标题</th>\n              <th className=\"duration\">时长</th>\n              <th className=\"singer\">歌手</th>\n            </tr>\n          </thead>\n          <tbody>\n            {playlist?.tracks?.map((item: any, index: number) => {\n              return (\n                <tr\n                  className=\"row\"\n                  key={item.id}\n                  onMouseEnter={(e) => setShowIconIndex(index)}\n                  onMouseLeave={(e) => setShowIconIndex(-1)}\n                >\n                  <td>\n                    <div className=\"rank-num\">\n                      <span className=\"num\">{index + 1}</span>\n                      <span className=\"new sprite_icon2\"></span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"song-name\">\n                      {index < 3 ? (\n                        <img src={getImageSize(item.al.picUrl, 50)} alt=\"\" />\n                      ) : null}\n                      <span className=\"play sprite_table\"></span>\n                      <span className=\"name\">{item.name}</span>\n                    </div>\n                  </td>\n                  <td className=\"icons\">\n                    {showIconIndex === index ? (\n                      <span>\n                        <a\n                          className=\"btn play sprite_icon2\"\n                          title=\"播放\"\n                          onClick={(e) =>\n                            dispatch(fetchSongDetailAction(item.id))\n                          }\n                        ></a>\n                        <a\n                          className=\"btn collect sprite_table\"\n                          onClick={(e) => handleCollectClick(item.id)}\n                          title=\"收藏\"\n                        ></a>\n                        <a className=\"btn share sprite_table\" title=\"分享\"></a>\n                        <a\n                          className=\"btn download sprite_table\"\n                          title=\"下载\"\n                        ></a>\n                      </span>\n                    ) : (\n                      formatMinuteSecond(item.dt)\n                    )}\n                  </td>\n                  <td>{item.ar[0].name}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        {showCollectDialog && (\n          <Collect needCollectSongid={needCollectSongid}></Collect>\n        )}\n      </div>\n      <Comment></Comment>\n    </RankingListWrapper>\n  )\n}\n\nexport default memo(RankingList)\n","import styled from 'styled-components'\n\nexport const RankingCategoryWrapper = styled.div`\n  padding: 25px 0;\n\n  .header {\n    padding: 12px 12px 10px;\n    font-size: 14px;\n    color: #000;\n    font-family: simsun;\n  }\n\n  .item {\n    height: 62px;\n    padding-left: 20px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover,\n    &.active {\n      background-color: #e6e6e6;\n    }\n\n    img {\n      width: 40px;\n      height: 40px;\n    }\n\n    .info {\n      margin-left: 10px;\n\n      .name {\n        color: #000;\n      }\n\n      .update {\n        margin-top: 5px;\n        color: #999;\n      }\n    }\n  }\n`\n","import React, { memo, useState, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { RankingCategoryWrapper } from './style'\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { shallowEqual } from 'react-redux'\nimport { getImageSize } from '@/utils/format'\nimport { changeCurrentSortDetailInfoAction } from '../../store'\nimport classNames from 'classnames'\nimport { getSortDetail } from '../../service'\nimport {\n  changeSourceIdAction,\n  fetchCommentAction\n} from '@/views/app-comment/store/comment'\nimport { useLocation, useParams } from 'react-router-dom'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst RankingCategory: React.FC<IProps> = () => {\n  const dispatch = useAppDispatch()\n\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const params = useParams()\n  const location = useLocation()\n\n  const { rankSort } = useAppSelector(\n    (state) => ({\n      rankSort: state.ranking.topList\n    }),\n    shallowEqual\n  )\n\n  useEffect(() => {\n    const Id = Number(location.search.slice(4))\n\n    //获取传过来的id\n    let rankId = rankSort?.[0]?.id\n    if (Id !== 0) {\n      rankId = Id\n    }\n\n    for (let i = 0; i < rankSort?.length; i++) {\n      if (rankSort?.[i].id === Id) {\n        setCurrentIndex(i)\n      }\n    }\n\n    dispatch(changeSourceIdAction(rankId))\n    dispatch(fetchCommentAction(0))\n  }, [rankSort])\n\n  function handleItemClick(index: number) {\n    setCurrentIndex(index)\n    //更改榜单分类\n    const id = rankSort[index].id\n    getSortDetail(id).then((res) => {\n      dispatch(changeCurrentSortDetailInfoAction(res.playlist))\n    })\n\n    // dispatch(changeCurrentSortListAction(id))\n\n    //将榜单对应的id存起来，用于获取评论\n    dispatch(changeSourceIdAction(id))\n    dispatch(fetchCommentAction(0))\n  }\n\n  return (\n    <RankingCategoryWrapper>\n      {rankSort?.map((item, index) => {\n        let header\n        if (index === 0 || index === 4) {\n          header = (\n            <div className=\"header\">\n              {index === 0 ? '云音乐特色榜' : '全球媒体榜'}\n            </div>\n          )\n        }\n        return (\n          <div key={item.id}>\n            {header}\n            <div\n              className={classNames('item', { active: index === currentIndex })}\n              onClick={(e) => handleItemClick(index)}\n            >\n              <img src={getImageSize(item.coverImgUrl, 40)} alt=\"\" />\n              <div className=\"info\">\n                <div className=\"name\">{item.name}</div>\n                <div className=\"update\">{item.updateFrequency}</div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </RankingCategoryWrapper>\n  )\n}\n\nexport default memo(RankingCategory)\n","import React, { memo, useEffect } from 'react'\nimport type { ReactNode } from 'react'\nimport { RankingLeft, RankingRight, RankingWrapper } from './style'\nimport RankingHeader from './c-cpns/ranking-header'\nimport RankingList from './c-cpns/ranking-list'\nimport RankingCategory from './c-cpns/top-ranking'\nimport { useAppDispatch } from '@/store'\nimport { fetchTopCategoryAction } from './store'\nimport { useLocation } from 'react-router-dom'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Ranking: React.FC<IProps> = () => {\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n  useEffect(() => {\n    //获取传过来的id\n    const Id = location.search.slice(4)\n\n    //获取榜单分类\n    dispatch(fetchTopCategoryAction(Number(Id)))\n  })\n\n  return (\n    <RankingWrapper className=\"wrap-v2\">\n      <RankingLeft>\n        <RankingCategory></RankingCategory>\n      </RankingLeft>\n      <RankingRight>\n        <RankingHeader></RankingHeader>\n        <RankingList></RankingList>\n      </RankingRight>\n    </RankingWrapper>\n  )\n}\n\nexport default memo(Ranking)\n"],"names":["useVerifyLogin","dispatch","useAppDispatch","verify","console","log","localStorage","getItem","fetchCodeDataAction","changeShowPanelAction","RankingWrapper","styled","div","_templateObject","_taggedTemplateLiteral","RankingLeft","_templateObject2","RankingRight","_templateObject3","RankingHeaderWrapper","OperatorBarWrapper","SongOperatorBar","props","favorTitle","shareTitle","downloadTitle","commentTitle","_jsxs","children","className","_jsx","memo","RankingHeader","playlist","useAppSelector","state","ranking","shallowEqual","src","coverImgUrl","alt","name","formatMonthDay","updateTime","subscribedCount","shareCount","commenCount","RankingListWrapper","require","ThemeHeaderWrapper","ThemeHeaderSong","trackCount","playCount","CommentWrapper","CommentHeaderWrapper","CommentHeader","totalComment","ContentWrapper","TipWrapper","CommentTip","_useAppSelector","sourceId","comment","commentId","_handleSureClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","operateComment","undefined","sent","code","message","open","content","duration","changeCloseTipAction","setTimeout","fetchCommentAction","stop","apply","arguments","DialogHeader","title","Button","onClick","e","CommentContent","replyRef","useRef","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","showDelIndex","setShowDelIndex","_useState5","_useState6","showReplyIndex","setShowReplyIndex","_useState7","_useState8","showReply","setShowReply","_useState9","_useState10","replyText","setReplyText","comments","total","uid","user","closeDelTip","_useAppSelector$total","_handleDelClick","changeCommentIdAction","_handleCommentClick","_callee2","_context2","map","item","index","num","likedCount","onMouseEnter","onMouseLeave","avatarUrl","nickname","beReplied","length","timeStr","classNames","userId","_x","handleDelClick","_replyRef$current","current","focus","handleReplyClick","defaultValue","concat","ref","onChange","target","value","replace","handleReplyChange","type","size","_x2","handleCommentClick","time","DelCommentTip","Pagination","page","offset","handleCurrentPageChange","pageSize","TextArea","Input","Comment","setContent","_useAppSelector$avata","ComnmentHeader","onFocus","rows","placeholder","maxLength","CollectWrapper","NewPlaylistWrapper","NewPlaylist","needCollectSongid","playlistName","setPlaylistName","_handleNewClick","pid","newPlaylist","id","addSongToPlaylistAction","tracks","changeShowCollectDialog","Collect","userPlaylist","userPlayList","showNewPlaylist","setShowNewPlaylist","line","RankingList","_playlist$tracks","showIconIndex","setShowIconIndex","setNeedwCollectSongid","showCollectDialog","collect","getImageSize","al","picUrl","fetchSongDetailAction","fetchUserPlaylistAction","formatMinuteSecond","dt","ar","RankingCategoryWrapper","RankingCategory","currentIndex","setCurrentIndex","location","useParams","useLocation","rankSort","topList","useEffect","_rankSort$","Id","Number","search","slice","rankId","i","changeSourceIdAction","header","active","getSortDetail","then","changeCurrentSortDetailInfoAction","handleItemClick","updateFrequency","Ranking","fetchTopCategoryAction"],"sourceRoot":""}